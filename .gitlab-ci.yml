image: node:20

variables:
  PNPM_STORE_DIR: .pnpm-store
  COREPACK_ENABLE_STRICT: 0

cache:
  key: ${CI_COMMIT_REF_SLUG}-pnpm
  paths:
    - .pnpm-store/
    - node_modules/

stages:
  - install
  - typecheck
  - lint
  - test
  - build

.setup_pnpm: &setup_pnpm |
  corepack enable
  corepack prepare pnpm@latest --activate
  pnpm --version

install:
  stage: install
  rules:
    - if: '$CI_COMMIT_BRANCH == "test/validation-run" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
  script:
    - *setup_pnpm
    - |
      # Use --no-frozen-lockfile for the validation-run branch to avoid failures
      # when the lockfile is intentionally out-of-sync for quick validations.
      if [ "$CI_COMMIT_BRANCH" = "test/validation-run" ]; then
        pnpm install --no-frozen-lockfile
      else
        pnpm install --frozen-lockfile
      fi

typecheck:
  stage: typecheck
  needs: ["install"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "test/validation-run" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
  script:
    - npx tsc --noEmit

lint:
  stage: lint
  needs: ["install"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "test/validation-run" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
  script:
    - pnpm run lint

test:
  stage: test
  needs: ["install"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "test/validation-run" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
  script:
    - pnpm run test -- --run

build:
  stage: build
  needs: ["install"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "test/validation-run" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
  script:
    - pnpm run build
